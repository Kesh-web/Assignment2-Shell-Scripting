#!/bin/bash
#Filename: config-script

# Usage function provides the user a help message that lists various options that the script accepts. It serves as a guide for the user incase they need understanding what parts of the script does what.
usage() {
    echo "Usage: $0 [OPTIONS] " # [OPTIONS] represents the options the user can pass when running the script
    echo ""
    echo "Options:"
    echo "  -h, --help           Show this help message and exit"
    echo "  -s, --symlink        Run the symbolic link setup script only"
    echo "  -x, --execute        Run the main installation script for all packages"
    echo "  -p, --packages       Run the setup script only"
    echo ""
    exit 1 # Exits the script with the code 1 
}


# getopts sets up variables with actions that can be run by the user. 
while getopts ":hsxp" opt; do
  case $opt in
    h)  # Displays the usage information
      usage
      ;;
    s)  # Executes the symlink script
      symlink=1
      ;;
    x)  # Executes both setup and symlink
      setup=1
      symlink=1
      ;;
    p)  # Executes the setup script
      setup=1
      ;;
    ?)  # Handles invalid options
      echo "Invalid option: -$OPTARG"
      usage
      ;;
  esac
done

# This are the default values that control the script when executed
setup=0
symlink=0


# Function to check if a script exists and is executable, then runs it. 
run_script() {
  local script_name="$1" # stores into a local variable.
  if [[ -x ./$script_name ]]; then # checks if the file exists in the directory and that it has exectuable permissions
    echo "Running $script_name..."
    ./$script_name
  else
    echo "Error: $script_name not found or not executable"
    exit 1
  fi
}

# Show usage and exit if no options were provided
if [[ $OPTIND -eq 1 ]]; then  # OPTIND defaults to 1, tracking the next argument to be processed
  echo "Make sure to use sudo when executing with -x or -p"
  usage
fi

# Handle option for running both setup and symlink setup
if [[ "$setup" -eq 1 && "$symlink" -eq 1 ]]; then # checks if both the variables "setup" and "symlink" are set to 1 which indicates it to run.
  echo "Running both setup and symlink creation scripts"
  run_script "setup"
  run_script "config_symlink"
else
  # Handle individual options
  [[ "$setup" -eq 1 ]] && run_script "setup"
fi
